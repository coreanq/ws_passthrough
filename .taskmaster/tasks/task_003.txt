# Task ID: 3
# Title: Implement WebSocket Server
# Status: pending
# Dependencies: 1
# Priority: high
# Description: Create the WebSocket server to handle client connections on the /data path.
# Details:
1. Set up a WebSocket server using the `ws` library
2. Configure the server to listen on the `/data` path
3. Implement connection handling:
   ```javascript
   const WebSocket = require('ws');
   const http = require('http');
   
   // Create HTTP server
   const server = http.createServer();
   
   // Create WebSocket server
   const wss = new WebSocket.Server({ 
     server,
     path: '/data'
   });
   
   wss.on('connection', (ws, req) => {
     console.log('Client connected');
     
     ws.on('message', (message) => {
       // Handle incoming messages (implemented in Task 4)
     });
     
     ws.on('close', () => {
       console.log('Client disconnected');
       // Handle disconnection (implemented in Task 6)
     });
     
     ws.on('error', (error) => {
       console.error('WebSocket error:', error);
       // Handle errors (implemented in Task 6)
     });
   });
   
   server.listen(process.env.PORT || 3000, () => {
     console.log(`Server started on port ${server.address().port}`);
   });
   ```
4. Implement basic connection tracking

# Test Strategy:
Test WebSocket server initialization and verify it correctly handles client connections. Use a WebSocket client library to connect to the server and confirm the connection is established properly.
